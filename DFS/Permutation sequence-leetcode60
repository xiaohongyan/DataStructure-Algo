class Solution(object):
    def getPermutation(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: str
        """
        self.res = []
        self.cur = []
        if n == 0:
            return 0
        self.alist= []
        for i in range(1,n+1):
            self.alist.append(i)
        self.helper(self.alist,k,self.res,self.cur,0)
        al = self.res[k-1]
        s = ''.join(str(i) for i in al)          
        return s
    
    def helper(self,alist,k,res,cur,i):
        if len(cur) == len(alist):
            res.append(cur[:])
            return
        for i in alist:
            if i not in cur:
                cur.append(i)
                self.helper(alist,k,res,cur,i+1)
                if len(res) == k:
                    return res
                cur.pop()
        return res
        
        
