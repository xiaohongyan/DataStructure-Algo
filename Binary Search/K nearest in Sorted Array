class Solution(object):
  def kClosest(self, array, target, k):
    """
    input: int[] array, int target, int k
    return: int[]
    """
    # write your solution here
    left = 0
    right = len(array)-1
    closet = 0
    while left<right-1:
      mid = (left+right)/2
      if array[mid]<target:
        left=mid
      elif array[mid]>target:
        right = mid
      else:
        closet = mid
        right = mid
    if abs(array[left]-target)<=abs(array[right]-target):
      closet = left
    else:
      closet = right     
    list1 = []
    print closet
    left = closet
    right = closet
    if k ==0:
      return list1
    list1.append(array[closet])
    while len(list1)<k:
      if left-1>=0 and right+1<len(array) and abs(array[left-1]-target)<=abs(array[right+1]-target):
        list1.append(array[left-1])
        left-=1
      elif left-1>=0 and right+1<len(array) and abs(array[left-1]-target)>abs(array[right+1]-target):
        list1.append(array[right+1])
        right+=1
      elif left == 0:
        list1.append(array[right+1])
      else:
        list1.append(array[left-1])
    return list1
    
    #方法二：最后用了slice array,把切片的array append到list 上，但这样的顺序不一定对，比如[[1,2,4,5],6,3]，Expected: [[5,4,2]，Your Solution: [[5, 2, 4]]
    class Solution(object):
  def kClosest(self, array, target, k):
    """
    input: int[] array, int target, int k
    return: int[]
    """
    # write your solution here
    # 1 find the closest 
    left = 0
    right = len(array)-1
    alist = []
    if k==0:  # corner case
      return alist
    while left<right-1:
      mid = (left+right)/2
      if array[mid]<=target:
        left=mid
      elif array[mid]>target:
        right=mid
    if abs(array[left]-target)>=abs(array[right]-target):
      targeti = right
    else:
      targeti = left
      
    # 2 find other K closest elements
    alist.append(array[targeti])
    left = targeti-1
    right = targeti+1
    while left>=0 and right<=len(array)-1 and len(alist)<k:
      if abs(array[left]-target)>=abs(array[right]-target):
        alist.append(array[right])
        right = right+1
      else:
        alist.append(array[left])
        left-=1
    blist =[]
    if len(alist)<k:     
      if left<0:
        blist = array[targeti:targeti+k-len(alist)]
      elif right>len(array)-1:
        blist = array[targeti-k+len(alist):targeti]
    alist.extend(blist)
    return alist
